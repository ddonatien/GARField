general {
    base_exp_dir = ./exp/CASE_NAME/GARField_default
    recording = [
        ./,
        ./models
    ]
    is_multiview = True
}

dataset {
    data_dir = ./data/CASE_NAME/
    render_cameras_name = cameras_sphere.npz
    object_cameras_name = cameras_sphere.npz
    camera_trainable = True
    camera_static = True
    use_depth = True
    depth_scale = 1e3
}

train {
    learning_rate = 5e-4
    learning_rate_alpha = 0.05
    end_iter = 90000

    batch_size = 128
    validate_resolution_level = 4
    warm_up_end = 10000
    anneal_end = 5000
    max_pe_iter = 10000
    use_white_bkgd = False
    # Depth
    geo_weight = 5.0
    igr_weight = 0.5
    mask_weight = 0.0

    save_freq = 5000
    val_freq = 1000
    report_freq = 50

    scene_components = [robot, object]
}

model {
    nerf {
        D = 6,
        d_in = 4,
        d_in_view = 3,
        W = 128,
        multires = 10,
        multires_view = 4,
        output_ch = 4,
        skips=[3],
        use_viewdirs=True
    }

    robot_sdf_network {
        d_out = 257
        d_in = 3
        d_hidden = 768
        n_layers = 8
        mesh_id = 0
        fc_s = 512
        skip_in = [4]
        multires = 6
        bias = 0.5
        scale = 3.0
        geometric_init = True
        weight_norm = True
        residual = False
        sdf_type = Mesh
    }

    robot_params {
        rigid_adjust = False
        dropout = 0.02
        lpe_norm = sym
        lpe_use_edge_attr = False
        lpe_size = 512
        code_bias = False
    }

    object_params {
        rigid_adjust = True
        dropout = 0.02
        lpe_norm = sym
        lpe_use_edge_attr = False
        lpe_size = 512
        code_bias = False
        code_learnt = False
        use_lpe = True
    }

    object_sdf_network {
        d_out = 257
        d_in = 3
        d_hidden = 768
        n_layers = 8
        mesh_id = 1
        fc_s = 512
        skip_in = [4]
        multires = 6
        bias = 0.5
        scale = 3.0
        geometric_init = True
        weight_norm = True
        residual = False
        sdf_type = Mesh
    }

    rigid_sdf_network {
        d_out = 257
        d_in = 3
        d_hidden = 256
        n_layers = 8
        skip_in = [4]
        multires = 10
        bias = 0.5
        scale = 1.0
        geometric_init = True
        weight_norm = True
        sdf_type = Rigid
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        d_feature = 256
        mode = idr
        d_in = 3
        d_out = 3
        d_hidden = 256
        n_layers = 4
        weight_norm = True
        multires_view = 6
        squeeze_out = True
        dropout = 0.2
    }

    neus_renderer {
        n_samples = 64
        n_importance = 64
        n_outside = 128
        up_sample_steps = 4     # 1 for simple coarse-to-fine sampling
        perturb = 1.0
        use_color = True
        aug_dirs = 0.3
    }
}
